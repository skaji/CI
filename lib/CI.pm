package CI;
# DO NOT EDIT THIS; This file is automatically generated by maint/generate.pl
use strict;
use warnings;

our $VERSION = '0.001';

use Exporter 'import';

our @EXPORT_OK = qw(
    is_ci
    name
    is_pr
    APPVEYOR
    AZURE_PIPELINES
    BAMBOO
    BITBUCKET
    BITRISE
    BUDDY
    BUILDKITE
    CIRCLE
    CIRRUS
    CODEBUILD
    CODESHIP
    DRONE
    DSARI
    GITLAB
    GOCD
    HUDSON
    JENKINS
    MAGNUM
    NETLIFY
    NEVERCODE
    SAIL
    SEMAPHORE
    SHIPPABLE
    SOLANO
    STRIDER
    TASKCLUSTER
    TEAMCITY
    TRAVIS
);

our %EXPORT_TAGS = (
    constant => [qw(
        APPVEYOR
        AZURE_PIPELINES
        BAMBOO
        BITBUCKET
        BITRISE
        BUDDY
        BUILDKITE
        CIRCLE
        CIRRUS
        CODEBUILD
        CODESHIP
        DRONE
        DSARI
        GITLAB
        GOCD
        HUDSON
        JENKINS
        MAGNUM
        NETLIFY
        NEVERCODE
        SAIL
        SEMAPHORE
        SHIPPABLE
        SOLANO
        STRIDER
        TASKCLUSTER
        TEAMCITY
        TRAVIS
    )],
);

use constant _CI => exists $ENV{CI} || exists $ENV{CONTINUOUS_INTEGRATION} || exists $ENV{RUN_ID};
use constant APPVEYOR => exists $ENV{APPVEYOR};
use constant AZURE_PIPELINES => exists $ENV{SYSTEM_TEAMFOUNDATIONCOLLECTIONURI};
use constant BAMBOO => exists $ENV{bamboo_planKey};
use constant BITBUCKET => exists $ENV{BITBUCKET_COMMIT};
use constant BITRISE => exists $ENV{BITRISE_IO};
use constant BUDDY => exists $ENV{BUDDY_WORKSPACE_ID};
use constant BUILDKITE => exists $ENV{BUILDKITE};
use constant CIRCLE => exists $ENV{CIRCLECI};
use constant CIRRUS => exists $ENV{CIRRUS_CI};
use constant CODEBUILD => exists $ENV{CODEBUILD_BUILD_ARN};
use constant CODESHIP => exists $ENV{CI_NAME} && $ENV{CI_NAME} eq 'codeship';
use constant DRONE => exists $ENV{DRONE};
use constant DSARI => exists $ENV{DSARI};
use constant GITLAB => exists $ENV{GITLAB_CI};
use constant GOCD => exists $ENV{GO_PIPELINE_LABEL};
use constant HUDSON => exists $ENV{HUDSON_URL};
use constant JENKINS => exists $ENV{JENKINS_URL} && exists $ENV{BUILD_ID};
use constant MAGNUM => exists $ENV{MAGNUM};
use constant NETLIFY => exists $ENV{NETLIFY_BUILD_BASE};
use constant NEVERCODE => exists $ENV{NEVERCODE};
use constant SAIL => exists $ENV{SAILCI};
use constant SEMAPHORE => exists $ENV{SEMAPHORE};
use constant SHIPPABLE => exists $ENV{SHIPPABLE};
use constant SOLANO => exists $ENV{TDDIUM};
use constant STRIDER => exists $ENV{STRIDER};
use constant TASKCLUSTER => exists $ENV{TASK_ID} && exists $ENV{RUN_ID};
use constant TEAMCITY => exists $ENV{TEAMCITY_VERSION};
use constant TRAVIS => exists $ENV{TRAVIS};

sub is_ci () {
    _CI
    || APPVEYOR
    || AZURE_PIPELINES
    || BAMBOO
    || BITBUCKET
    || BITRISE
    || BUDDY
    || BUILDKITE
    || CIRCLE
    || CIRRUS
    || CODEBUILD
    || CODESHIP
    || DRONE
    || DSARI
    || GITLAB
    || GOCD
    || HUDSON
    || JENKINS
    || MAGNUM
    || NETLIFY
    || NEVERCODE
    || SAIL
    || SEMAPHORE
    || SHIPPABLE
    || SOLANO
    || STRIDER
    || TASKCLUSTER
    || TEAMCITY
    || TRAVIS
}

sub name () {
    APPVEYOR ? 'APPVEYOR'
    : AZURE_PIPELINES ? 'AZURE_PIPELINES'
    : BAMBOO ? 'BAMBOO'
    : BITBUCKET ? 'BITBUCKET'
    : BITRISE ? 'BITRISE'
    : BUDDY ? 'BUDDY'
    : BUILDKITE ? 'BUILDKITE'
    : CIRCLE ? 'CIRCLE'
    : CIRRUS ? 'CIRRUS'
    : CODEBUILD ? 'CODEBUILD'
    : CODESHIP ? 'CODESHIP'
    : DRONE ? 'DRONE'
    : DSARI ? 'DSARI'
    : GITLAB ? 'GITLAB'
    : GOCD ? 'GOCD'
    : HUDSON ? 'HUDSON'
    : JENKINS ? 'JENKINS'
    : MAGNUM ? 'MAGNUM'
    : NETLIFY ? 'NETLIFY'
    : NEVERCODE ? 'NEVERCODE'
    : SAIL ? 'SAIL'
    : SEMAPHORE ? 'SEMAPHORE'
    : SHIPPABLE ? 'SHIPPABLE'
    : SOLANO ? 'SOLANO'
    : STRIDER ? 'STRIDER'
    : TASKCLUSTER ? 'TASKCLUSTER'
    : TEAMCITY ? 'TEAMCITY'
    : TRAVIS ? 'TRAVIS'
    : undef
}

sub is_pr () {
    ( APPVEYOR && exists $ENV{APPVEYOR_PULL_REQUEST_NUMBER} )
    || ( AZURE_PIPELINES && exists $ENV{SYSTEM_PULLREQUEST_PULLREQUESTID} )
    || ( BAMBOO && 0 )
    || ( BITBUCKET && exists $ENV{BITBUCKET_PR_ID} )
    || ( BITRISE && exists $ENV{BITRISE_PULL_REQUEST} )
    || ( BUDDY && exists $ENV{BUDDY_EXECUTION_PULL_REQUEST_ID} )
    || ( BUILDKITE && exists $ENV{BUILDKITE_PULL_REQUEST} && $ENV{BUILDKITE_PULL_REQUEST} ne 'false' )
    || ( CIRCLE && exists $ENV{CIRCLE_PULL_REQUEST} )
    || ( CIRRUS && exists $ENV{CIRRUS_PR} )
    || ( CODEBUILD && 0 )
    || ( CODESHIP && 0 )
    || ( DRONE && 1 )
    || ( DSARI && 0 )
    || ( GITLAB && 0 )
    || ( GOCD && 0 )
    || ( HUDSON && 0 )
    || ( JENKINS && exists $ENV{ghprbPullId} || exists $ENV{CHANGE_ID} )
    || ( MAGNUM && 0 )
    || ( NETLIFY && exists $ENV{PULL_REQUEST} && $ENV{PULL_REQUEST} ne 'false' )
    || ( NEVERCODE && exists $ENV{NEVERCODE_PULL_REQUEST} && $ENV{NEVERCODE_PULL_REQUEST} ne 'false' )
    || ( SAIL && exists $ENV{SAIL_PULL_REQUEST_NUMBER} )
    || ( SEMAPHORE && exists $ENV{PULL_REQUEST_NUMBER} )
    || ( SHIPPABLE && 1 )
    || ( SOLANO && exists $ENV{TDDIUM_PR_ID} )
    || ( STRIDER && 0 )
    || ( TASKCLUSTER && 0 )
    || ( TEAMCITY && 0 )
    || ( TRAVIS && exists $ENV{TRAVIS_PULL_REQUEST} && $ENV{TRAVIS_PULL_REQUEST} ne 'false' )
}

1;
__END__

=encoding utf-8

=head1 NAME

CI - Get details about the current Continuous Integration environment

=head1 SYNOPSIS

  use CI;
  use Test::More;

  plan skip_all => 'This test is only for CI' if !CI::is_ci;

  ...

  done_testing;

=head1 DESCRIPTION

CI gets details about the current Continuous Integration environment.
This is a Perl port of L<https://github.com/watson/ci-info>.

=head1 AUTHOR

Shoichi Kaji <skaji@cpan.org>

=head1 COPYRIGHT AND LICENSE

Copyright 2019 Shoichi Kaji <skaji@cpan.org>

The MIT License (MIT)

=cut
